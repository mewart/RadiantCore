version: '3.8'

services:
  radiant_frontend:
    build:
      context: ./clients/radiant-frontend
      dockerfile: Dockerfile
    container_name: radiant_frontend
    ports:
      - "5173:5173"
    restart: unless-stopped
    networks:
      - radiantcore-net
    volumes:
      - /home/mewart/RadiantCore/clients/radiant-frontend:/app

  ai_mindloop:
    build:
      context: ./servers/ai_mindloop
      dockerfile: Dockerfile
    container_name: ai_mindloop
    ports:
      - "3400:3400"
    restart: unless-stopped
    networks:
      - radiantcore-net
    # Comment out/remove this line if present:
    # - /home/mewart/RadiantCore/servers/ai_mindloop:/app
    #volumes:
    #  - /home/mewart/RadiantCore/servers/ai_mindloop/ai_mindloop_core.js:/app/ai_mindloop_core.js
    #  - /home/mewart/RadiantCore/servers/ai_mindloop/services:/app/services


  stt_ws:
    build:
      context: ./servers/stt_ws
      dockerfile: Dockerfile
    container_name: stt_ws
    ports:
      - "3100:3100"
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    networks:
      - radiantcore-net
    volumes:
      - /home/mewart/RadiantCore/servers/stt_ws:/app

  codex_api:
    build:
      context: ./servers/codex
      dockerfile: Dockerfile
    container_name: codex_api
    ports:
      - "3200:3200"
    volumes:
      - /home/mewart/RadiantCore/servers/codex/codices:/app/codices
      - /home/mewart/RadiantCore/servers/codex/.env:/app/.env
    environment:
      - CODEX_API_KEY=RadiantCoreRules!27x9
    restart: unless-stopped
    networks:
      - radiantcore-net

  ai_gateway:
    build:
      context: ./servers/ai_gateway
      dockerfile: Dockerfile
    container_name: ai_gateway
    ports:
      - "3600:3600"
    restart: unless-stopped
    networks:
      - radiantcore-net
    volumes:
      - /home/mewart/RadiantCore/servers/ai_gateway/server.js:/app/server.js
      - /home/mewart/RadiantCore/servers/ai_gateway/services:/app/services
      - /home/mewart/RadiantCore/servers/ai_gateway/.env:/app/.env

  ai_api:
    build:
      context: ./servers/ai_api
      dockerfile: Dockerfile
    container_name: ai_api
    dns:
      - "8.8.8.8"
      - "8.8.4.4"
    ports:
      - "3300:3300"
    restart: unless-stopped
    networks:
      - radiantcore-net
    volumes:
      - /home/mewart/RadiantCore/servers/ai_api:/app

  vitalsigns:
    build:
      context: ./servers/vitalsigns
      dockerfile: Dockerfile
    container_name: vitalsigns
    ports:
      - "3500:3500"
    depends_on:
      - ai_mindloop
      - stt_ws
      - codex_api
      - radiant_frontend
      - ai_gateway
      - ai_api
    restart: unless-stopped
    networks:
      - radiantcore-net

  cloudflared:
    image: cloudflare/cloudflared:2024.5.0
    container_name: cloudflared
    command: tunnel --config /etc/cloudflared/config.yml run
    volumes:
      - /mnt/d/RadiantCore/cloudflared_shared/config.yml:/etc/cloudflared/config.yml:ro
      - /mnt/d/RadiantCore/cloudflared_shared/63836ec8-7813-4234-9858-69ae70a1c5e7.json:/etc/cloudflared/63836ec8-7813-4234-9858-69ae70a1c5e7.json:ro
    restart: unless-stopped
    networks:
      - radiantcore-net


  xtts_speaker:
    build:
      context: ./servers/xtts_speaker
      dockerfile: Dockerfile
    container_name: xtts_speaker
    volumes:
      - /home/mewart/RadiantCore/voice_samples:/app/voice_samples
    ports:
      - "3700:3700"
    environment:
      - ENV_VAR=value
    restart: unless-stopped
    networks:
      - radiantcore-net

networks:
  radiantcore-net:
    driver: bridge
